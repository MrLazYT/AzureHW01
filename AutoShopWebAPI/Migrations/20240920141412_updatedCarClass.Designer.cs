// <auto-generated />
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoShop.Migrations
{
    [DbContext(typeof(CarContext))]
    [Migration("20240920141412_updatedCarClass")]
    partial class updatedCarClass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Color = "White",
                            ImagePath = "https://images.dealer.com/autodata/us/color/2020/USD00TOC021D0/040.jpg",
                            Model = "Toyota Camry",
                            Price = 28007m,
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Color = "Blue",
                            ImagePath = "https://di-uploads-pod11.dealerinspire.com/hondaofkirkland/uploads/2019/08/2019-Civic-Type-R-Aegean-Blue.png",
                            Model = "Honda Civic",
                            Price = 20000m,
                            Year = 2019
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Color = "Black",
                            ImagePath = "https://img.autobytel.com/chrome/colormatched_01/white/640/cc_2021fos10_01_640/cc_2021fos100055_01_640_um.jpg",
                            Model = "Ford Explorer",
                            Price = 32999m,
                            Year = 2021
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Color = "Red",
                            ImagePath = "https://dealer-content.s3.amazonaws.com/images/models/chevrolet/2022/tahoe/colors/auburn-metallic.png",
                            Model = "Chevrolet Tahoe",
                            Price = 52990m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Color = "Silver",
                            ImagePath = "https://static.tcimg.net/vehicles/gallery/1d9ae78296ed295e/2018-BMW-2_Series.jpg",
                            Model = "BMW 2 Series",
                            Price = 9999m,
                            Year = 2018
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Color = "Gray",
                            ImagePath = "https://di-uploads-pod5.dealerinspire.com/mercedesbenzofpalmsprings/uploads/2017/05/2017-C-300-Sedan-Selenite-Grey-Metallic-1.png",
                            Model = "Mercedes-Benz C-Class",
                            Price = 9300m,
                            Year = 2017
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Color = "Green",
                            ImagePath = "https://www.miataforumz.com/attachments/miata-general-discussion-36/1958d1317909812-mazda-mx-5-miata-gets-black-tuned-japan-black-tuned-roadster-628.jpg",
                            Model = "Mazda MX-5",
                            Price = 27999m,
                            Year = 2021
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Color = "Yellow",
                            ImagePath = "https://i.ebayimg.com/images/g/BsAAAOSwpaZbmWIz/s-l1200.jpg",
                            Model = "Ford Mustang",
                            Price = 65000m,
                            Year = 2020
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Color = "White",
                            ImagePath = "https://www.stablevehiclecontracts.co.uk/uploads/2-2020-vw-golf-gti-mk8-pure-white.jpg",
                            Model = "Volkswagen Golf",
                            Price = 23000m,
                            Year = 2019
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Color = "Black",
                            ImagePath = "https://platform.cstatic-images.com/xlarge/in/v2/stock_photos/4f7a628e-4f6c-4ea4-b32f-3bdb82cbd18b/dd77a9fa-afc6-4dc4-baa2-bdddb8383dac.png",
                            Model = "Honda Fit",
                            Price = 17100m,
                            Year = 2020
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Standard 4-door passenger cars",
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sport Utility Vehicles",
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Two-door sports cars",
                            Name = "Coupe"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cars with retractable roofs",
                            Name = "Convertible"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Compact cars with hatch-style trunk",
                            Name = "Hatchback"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Car", b =>
                {
                    b.HasOne("DataAccess.Entities.Category", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DataAccess.Entities.Category", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
